# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import *

from matplotlib.backends.backend_tkagg import (FigureCanvasTkAgg, NavigationToolbar2Tk)
from matplotlib.figure import Figure

import api

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets/frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


class ViewGraph(Frame):

    def __init__(self, parent, controller=None, *args, **kwargs):
        Frame.__init__(self, parent, *args, **kwargs)
        self.parent = parent

        self.canvas = Canvas(
            self,
            bg="#343638",
            height=580,
            width=1113,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        self.canvas.place(x=0, y=0)

        p1, p2 = [], []
        if len(api.Player1.songList):
            for i in range(20):
                p1.append(api.Player1.songList[i].pp)
                p2.append(api.Player2.songList[i].pp)

        # the figure that will contain the plot
        fig = Figure(figsize=(12, 5), dpi=100)

        # adding the subplot
        plot1 = fig.add_subplot(111)

        # plotting the graph
        a, = plot1.plot(p1, 'r', linewidth=2)
        b, = plot1.plot(p2, 'b', linewidth=2)
        fig.patch.set_facecolor("#191B29")
        plot1.grid(color='#252D6A')
        plot1.set_facecolor("#191B29")
        plot1.xaxis.label.set_color('white')
        plot1.yaxis.label.set_color('white')
        plot1.tick_params(axis='y', colors='white')
        plot1.tick_params(axis='x', colors='white')
        plot1.set_xlabel('Play counts')
        plot1.set_ylabel('Unweighted PP')
        plot1.legend((a, b), (api.Player1.name, api.Player2.name))

        # creating the Tkinter canvas
        # containing the Matplotlib figure
        self.canvas = FigureCanvasTkAgg(fig, master=self)
        self.canvas.draw()

        # placing the canvas on the Tkinter window
        self.canvas.get_tk_widget().pack()

        # creating the Matplotlib toolbar
        toolbar = NavigationToolbar2Tk(self.canvas, self)
        toolbar.update()

        # placing the toolbar on the Tkinter window
        self.canvas.get_tk_widget().pack()

    def plotGraph(self):
        # plot graph

        # get songlist from current users
        self.left_songlist = api.Player1.songList
        self.right_songlist = api.Player2.songList
